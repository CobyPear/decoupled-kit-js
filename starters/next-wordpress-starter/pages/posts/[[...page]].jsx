import { NextSeo } from 'next-seo';
import { setEdgeHeader } from '@pantheon-systems/wordpress-kit';

import PageHeader from '../../components/page-header';
import Layout from '../../components/layout';
import { PostGridItem } from '../../components/grid';
import { withGrid } from '@pantheon-systems/nextjs-kit';
import { useRouter } from 'next/router';
import { Paginator } from '@pantheon-systems/nextjs-kit';
import { ContentWithImage } from '@pantheon-systems/nextjs-kit';

import { getFooterMenu } from '../../lib/Menus';
import { getLatestPosts, getPostBySlug } from '../../lib/Posts';

export default function PostHandler({ menuItems, posts }) {
	const router = useRouter();
	const { page = [] } = router.query;

	// render post list if multiple posts were passed
	if (posts.length !== undefined) {
		return (
			<PostsListTemplate
				menuItems={menuItems}
				posts={posts}
				pageNum={!isNaN(page[0]) ? page[0] : undefined}
			/>
		);
	} else {
		return <PostTemplate menuItems={menuItems} post={posts} />;
	}
}

export function PostsListTemplate({ menuItems, posts, pageNum }) {
	const PostGrid = withGrid(PostGridItem);
	const RenderCurrentItems = ({ currentItems }) => {
		return (
			<PostGrid contentType="posts" data={currentItems} pageNum={pageNum} />
		);
	};

	return (
		<Layout footerMenu={menuItems}>
			<NextSeo
				title="Decoupled Next WordPress Demo"
				description="Generated by create next app."
			/>
			<PageHeader title="Posts" />
			<div className="max-w-screen-lg mx-auto">
				<section>
					<Paginator
						data={posts}
						itemsPerPage={10}
						Component={RenderCurrentItems}
						routing
					/>
				</section>
			</div>
		</Layout>
	);
}

export function PostTemplate({ menuItems, post }) {
	return (
		<Layout footerMenu={menuItems}>
			<NextSeo
				title="Decoupled Next WordPress Demo"
				description="Generated by create next app."
			/>
			<ContentWithImage
				title={post.title}
				content={post.content}
				date={new Date(post.date).toLocaleDateString('en-US', {
					timeZone: 'UTC',
				})}
				imageProps={
					post.featuredImage
						? {
								src: post.featuredImage?.node.sourceUrl,
								alt: post.featuredImage?.node.altText,
						  }
						: undefined
				}
			/>
		</Layout>
	);
}

export async function getServerSideProps({ res, params }) {
	const menuItems = await getFooterMenu();
	let posts = await getLatestPosts();
	const { page } = params;

	if (page !== undefined) {
		// check if a specific post was requested
		posts = await getPostBySlug(page[page.length - 1]);
		if (posts === null) {
			posts = await getLatestPosts();
		}
	}

	setEdgeHeader({ res });

	return {
		props: {
			menuItems,
			posts,
		},
	};
}
